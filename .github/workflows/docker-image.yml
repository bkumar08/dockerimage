name: Build Docker Image

on:
  push:
    branches:
      - main

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker
        uses: crazy-max/ghaction-setup-docker@v3
        with:
          daemon-config: |
            {
              "debug": true,
              "experimental": true,
              "features": {
                "containerd-snapshotter": true
              }
            }
      - name: Generate Dockerfile
        run: |
          echo -e "FROM ubuntu:20.04\nRUN apt-get update && apt-get install -y curl" > Dockerfile
          ls
          pwd
      - name: Download Qscanner
        run: |
          wget https://www.qualys.com/qscanner/download/v4.2.0/download_qscanner.sh
          ls -ltr
          pwd
          sudo bash $(pwd)/download_qscanner.sh
      - name: Docker version
        run: docker info
      - name: Docker image pull
        run: docker pull alpine:latest  
      - name: Build Docker image
        run: |
          docker buildx create --use
          docker buildx inspect
          docker buildx build --file /home/runner/work/dockerimage/dockerimage/Dockerfile --platform linux/amd64,linux/arm64 -t crmtestimage:multiid --load .
      - name: List docker images
        run: docker images
      - name: docker inspect
        run: |
         image_sha=$(docker inspect -f '{{.Id}}' alpine:latest)
         echo "Image SHA: $image_sha"
         docker history $image_sha
      - name: save multi-arch image
        run: |
          image_sha=$(docker inspect -f '{{.Id}}' crmtestimage:multiid)
          echo "Image ID: $image_sha"
          docker save -o multiarchtest.tar $image_sha
          ls
      - name: Use Qualys Access Token
        run: |
          echo "Using Qualys Access Token"
          export QUALYS_TOKEN="${{ secrets.QUALYS_ACCESS_TOKEN }}"
          echo "Token set"
          echo "$QUALYS_TOKEN"
      - name: Image scan through Qscanner
        env:
          QUALYS_ACCESS_TOKEN: ${{ secrets.QUALYS_ACCESS_TOKEN }}  # Inject the secret
        run: |
          # Get image ID from docker
          image_sha=$(docker inspect -f '{{.Id}}' alpine:latest)
          sockpath=$(docker info -f '{{.DockerRootDir}}')
          sockpath=$(echo $sockpath | awk -v srch="data" -v repl="docker.sock" '{ sub(srch,repl,$0); print $0 }')
          
          echo "Docker socket path: $sockpath"
          echo "Running qscanner with image_sha: $image_sha"

          # Ensure the token is passed in the sudo command correctly
          sudo -E DOCKER_HOST=unix://$sockpath $(pwd)/linux-amd64/qscanner image $image_sha --pod US3 --access-token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJxdWF5czNiazEiLCJpc3MiOiJxYXMiLCJwb3J0YWxVc2VySWQiOjY0Mjk1MzEsInNlY3JldElkIjoiOGI3ZDg2NjQtMjcyZC00ZjRkLTg5MDMtZDBmZTI3YTMxOTU3IiwicXdlYlVzZXJJZCI6NTA3OTg1NiwiYXVkIjoicWFzIiwiY3VzdG9tZXJJZCI6NTE5ODY4LCJ1c2VyVXVpZCI6ImQ4MDRhMmZhLWQ5MTItNWY0ZC04MjY2LTRiZGZmZWRjYWE5YSIsInN1YnNjcmlwdGlvblV1aWQiOiI0ZTRiNTYyMy0xZjVjLWZiODAtODNhYS0xZmU1NzA0Zjk5MTEiLCJleHAiOjE3NTg2NzUwODcsInN1YnNjcmlwdGlvbklkIjo0OTIyNjUzLCJ0b2tlblR5cGUiOiJzdWJzY3JpcHRpb24iLCJpYXQiOjE3MjcxMTc0ODcsImp0aSI6IjAyZTMyZTMxLTEzOGYtNDNlNy1hMmE4LWY1OTNiZGZhZGZhOCJ9.e0thBA2jIg18pgtfGxffj8rIilb34C5YCXewMb2gTv7fD7qJxZR1YbGETprutOpI8FwxkntzJfkKHHg5QL2LVg

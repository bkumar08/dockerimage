name: Build and Scan Docker Images

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Docker
        uses: crazy-max/ghaction-setup-docker@v3
        with:
          daemon-config: |
            {
              "debug": true,
              "experimental": true,
              "features": {
                "containerd-snapshotter": true
              }
            }

      - name: Generate Dockerfile
        run: |
          echo -e "FROM ubuntu:20.04\nRUN apt-get update && apt-get install -y curl" > Dockerfile
          ls
          pwd

      - name: Docker version
        run: docker info

      - name: Download Qscanner
        run: |
          wget https://www.qualys.com/qscanner/download/v4.4.0/download_qscanner.sh
          ls -ltr
          pwd
          sudo bash $(pwd)/download_qscanner.sh

      - name: Fetch tags from Docker Hub
        id: tags
        run: |
          repo="birutest/qscannerscan"
          tags=$(curl -s "https://hub.docker.com/v2/repositories/$repo/tags?page_size=100" | jq -r '.results[].name')
          
          # Convert the tags into a format that can be easily used in a loop
          echo "Tags: $tags"
          echo "$tags" > tags.txt

      - name: Pull and Scan Images with Qscanner
        run: |
          # Read the tags from the file and process each one
          index=1
          total_tags=$(wc -l < tags.txt)  # Get the number of tags from the file
          echo "Total tags to scan: $total_tags"
          
          # Loop over each tag and scan
          while IFS= read -r tag; do
            echo "Pulling image: birutest/qscannerscan:$tag"
            docker pull --quiet birutest/qscannerscan:$tag  # Ensure the image is pulled first

            # Verify that the image is pulled successfully
            image_sha=$(docker inspect -f '{{.Id}}' birutest/qscannerscan:$tag)
            if [ -z "$image_sha" ]; then
              echo "Error: Docker image birutest/qscannerscan:$tag not found!"
              continue  # continue with the next tag if the image is not found
            fi

            echo "Scanning image $index/$total_tags: birutest/qscannerscan:$tag ..."
            sockpath=$(docker info -f '{{.DockerRootDir}}')
            sockpath=$(echo $sockpath | awk -v srch="data" -v repl="docker.sock" '{ sub(srch,repl,$0); print $0 }')
            echo "Docker socket path: $sockpath"
            echo "Running qscanner with image_sha: $image_sha"
            
            # Increase the timeout by using the --poll-timeout option and handle errors
            sudo DOCKER_HOST=unix://$sockpath $(pwd)/linux-amd64/qscanner image birutest/qscannerscan:$tag --pod US2 --access-token ${{ secrets.QUALYS_ACCESS_TOKEN }} --report-format json --poll-timeout 1800s
            if [ $? -ne 0 ]; then
              echo "Warning: Vulnerability scan timed out or failed for birutest/qscannerscan:$tag, but continuing."
            fi
            index=$((index+1))
          done < tags.txt
